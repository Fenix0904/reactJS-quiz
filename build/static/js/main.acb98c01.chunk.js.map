{"version":3,"sources":["components/navigation/menu-toggle/MenuToggle.js","components/UI/back-drop/BackDrop.js","components/navigation/drawer/Drawer.js","components/hoc/layout/Layout.js","components/active-quiz/answers-list/answer-item/AnswerItem.js","components/active-quiz/answers-list/AndswersList.js","components/active-quiz/ActiveQuiz.js","components/UI/button/Button.js","components/finished-quiz/FinishedQuiz.js","components/UI/loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","components/containers/quiz/Quiz.js","components/UI/input/Input.js","components/form/form-framevork.js","store/actions/auth.js","components/containers/auth/Auth.js","components/UI/select/Select.js","components/containers/quiz-creator/QuizCreator.js","store/actions/create.js","components/containers/quiz-list/QuizList.js","components/Logout/Logout.js","components/App.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["MenuToggle","props","cls","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","BackDrop","Drawer","this","backDrop","UI_back_drop_BackDrop","onClose","links","to","label","exact","isAuthenticated","Fragment","renderLinks","_this","map","link","index","key","NavLink","activeClassName","React","Component","Layout","state","menu","toggleMenu","setState","onMenuClose","Drawer_Drawer","navigation_menu_toggle_MenuToggle","children","connect","auth","token","AnswerItem","classes","onAnswerClicked","answer","id","text","AnswersList","answers","answers_list_answer_item_AnswerItem","ActiveQuiz","questionNumber","question","quizLength","answers_list_AndswersList","Button","type","disabled","FinishedQuiz","correctCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_button_Button","onRetry","Link","Loader","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","MOVE_TO_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizesStart","fetchQuizesSuccess","quizes","payLoad","fetchQuizesError","error","fetchQuizSuccess","quizAnswerClick","answerId","dispatch","getState","answerState","activeQuestion","rightAnswerId","quizSetState","defineProperty","timeout","window","setTimeout","nextQuestionNumber","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","loading","UI_loader_Loader","isFinished","components_finished_quiz_FinishedQuiz","components_active_quiz_ActiveQuiz","quizId","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","get","concat","sent","data","t0","stop","_x2","apply","arguments","isInvalid","_ref","valid","touched","shouldValidate","Input","htmlFor","Math","random","errorMessage","value","onChange","createControl","config","validation","objectSpread","validate","undefined","isValid","required","trim","email","is","minLength","validateForm","formControls","isFormValid","control","hasOwnProperty","autoLogout","time","logout","authSuccess","payload","localStorage","removeItem","Auth","password","loginHandler","authenticate","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","target","onSubmit","renderInputs","_this2","UI_input_Input","isLogin","_callee","authData","url","expirationDate","_context","returnSecureToken","post","Date","getTime","expiresIn","setItem","idToken","localId","_x","Select","options","option","createControlOptions","number","createFormControls","option1","option2","option3","option4","QuizCreator","onSubmitHandler","addQuestionHandler","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","onSelectChangeHandler","renderInputControls","select","UI_select_Select","quizCreator","item","QuizList","fetchQuizes","name","content","renderQuizes","forEach","Logout","Redirect","App","autoLogin","routes","Switch","Route","path","component","hoc_layout_Layout","withRouter","getItem","initialState","quizReducer","action","combineReducers","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.acb98c01.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MenuToggle.css';\r\n\r\nconst MenuToggle = (props) => {\r\n\r\n    const cls = [\r\n      'MenuToggle',\r\n      'fa',\r\n    ];\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push('open');\r\n    } else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n};\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport './BackDrop.css';\r\n\r\nconst BackDrop = (props) => {\r\n    return (\r\n        <div className='BackDrop' onClick={props.onClick}/>\r\n    )\r\n};\r\n\r\nexport default BackDrop;","import React from 'react';\r\nimport './Drawer.css';\r\nimport BackDrop from \"../../UI/back-drop/BackDrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default class Drawer extends React.Component {\r\n\r\n    render() {\r\n        const cls = ['Drawer'];\r\n        if (!this.props.isOpen) {\r\n            cls.push('closed');\r\n        }\r\n\r\n        const backDrop = this.props.isOpen ? <BackDrop onClick={this.props.onClose}/> : null;\r\n        const links = [\r\n            {to: '/', label: \"Home\", exact: true}\r\n        ];\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: \"Create quiz\", exact: false});\r\n            links.push({to: '/logout', label: \"Logout\", exact: false});\r\n        } else {\r\n            links.push({to: '/auth', label: \"Auth\", exact: false},);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(\" \")}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {backDrop}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={'active'}\r\n                        onClick={this.props.onClose}\r\n                    >{link.label}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Layout.css';\r\nimport MenuToggle from \"../../navigation/menu-toggle/MenuToggle\";\r\nimport Drawer from \"../../navigation/drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends React.Component{\r\n\r\n    state = {\r\n       menu: false\r\n    };\r\n\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    };\r\n\r\n    onMenuClose = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='Layout'>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.onMenuClose}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenu}\r\n                    isOpen={this.state.menu}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       isAuthenticated: !!state.auth.token\r\n   }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './AnswerItem.css';\r\n\r\nconst AnswerItem = (props) => {\r\n\r\n    let classes = 'AnswerItem';\r\n\r\n    if (props.state) {\r\n        classes += \" \" + props.state;\r\n    }\r\n\r\n    return (\r\n      <li\r\n          className={classes}\r\n          onClick={() => props.onAnswerClicked(props.answer.id)}\r\n      >\r\n          {props.answer.text}\r\n      </li>\r\n    );\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport './AndswersList.css';\r\nimport AnswerItem from \"./answer-item/AnswerItem\";\r\n\r\nconst AnswersList = (props) => (\r\n    <ul className=\"AnswersList\">\r\n        {props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClicked={props.onAnswerClicked}\r\n                />\r\n            )\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default AnswersList;\r\n","import React from 'react';\r\nimport './ActiveQuiz.css';\r\nimport AnswersList from \"./answers-list/AndswersList\";\r\n\r\nconst ActiveQuiz = (props) => (\r\n    <div className=\"ActiveQuiz\">\r\n        <p className='Question'>\r\n            <span>\r\n                <strong>{props.questionNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.questionNumber} from {props.quizLength}</small>\r\n        </p>\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClicked={props.onAnswerClicked}/>\r\n    </div>\r\n);\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        'Button',\r\n        props.type\r\n    ];\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(\" \")}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport './FinishedQuiz.css';\r\nimport Button from \"../UI/button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = (props) => {\r\n    const correctCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'correct') {\r\n            total++;\r\n        }\r\n        return total;\r\n    }, 0);\r\n    return (\r\n        <div className='FinishedQuiz'>\r\n            <ul>\r\n                {\r\n                    props.quiz.map((quizItem, index) => {\r\n                        const cls = [\r\n                            'fa',\r\n                            props.results[quizItem.id] === 'wrong' ? 'fa-times' : 'fa-check',\r\n                            props.results[quizItem.id]\r\n                        ];\r\n                        return (\r\n                            <li key={index}>\r\n                                <strong>{index + 1}.</strong>&nbsp;\r\n                                {quizItem.question}\r\n                                <i className={cls.join(' ')}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            <p>Correct {correctCount} from {props.quiz.length}</p>\r\n            <div>\r\n                <Button type=\"primary\" onClick={props.onRetry}>Retry</Button>\r\n                <Link to='/'>\r\n                    <Button type=\"correct\">Go to test list</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FinishedQuiz;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = (props) => (\r\n    <div className='center'>\r\n        <div className=\"Loader\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://react-quiz-76a7e.firebaseio.com/\"\r\n});","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const MOVE_TO_NEXT_QUESTION = 'MOVE_TO_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\n","import axios from \"../../axios/axios-quiz\";\r\nimport {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FINISH_QUIZ,\r\n    MOVE_TO_NEXT_QUESTION,\r\n    QUIZ_RETRY,\r\n    QUIZ_SET_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n    return async (dispatch) => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const response = await axios.get('quizes.json');\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Test № ${index + 1}`\r\n                })\r\n            });\r\n            dispatch(fetchQuizesSuccess(quizes));\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async (dispatch) => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const response = await axios.get(`quizes/${quizId}.json`);\r\n            const quiz = response.data;\r\n            dispatch(fetchQuizSuccess(quiz));\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    };\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        payLoad: quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(error) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        payLoad: error\r\n    };\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        payLoad: quiz\r\n    };\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz;\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0];\r\n            if (state.answerState[key] === 'correct') {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'correct';\r\n            }\r\n            dispatch(quizSetState({[answerId]: 'correct'}, results));\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz());\r\n                } else {\r\n                    dispatch(moveToNextQuestion(state.activeQuestion + 1));\r\n                }\r\n                window.clearTimeout(timeout);\r\n            }, 1000);\r\n        } else {\r\n            results[question.id] = 'wrong';\r\n            dispatch(quizSetState({[answerId]: 'wrong'}, results));\r\n        }\r\n    };\r\n\r\n    function isQuizFinished(state) {\r\n        return state.activeQuestion + 1 === state.quiz.length;\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        payLoad: {\r\n            answerState,\r\n            results\r\n        }\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ,\r\n\r\n    }\r\n}\r\n\r\nexport function moveToNextQuestion(nextQuestionNumber) {\r\n    return {\r\n        type: MOVE_TO_NEXT_QUESTION,\r\n        payLoad: nextQuestionNumber\r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: QUIZ_RETRY,\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Quiz.css';\r\nimport ActiveQuiz from \"../../active-quiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../finished-quiz/FinishedQuiz\";\r\nimport Loader from \"../../UI/loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../../store/actions/quiz\";\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // in order to reset current quiz progress\r\n        this.props.retryQuiz();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Quiz\">\r\n                <div className=\"QuizWrapper\">\r\n                    <h2>Answer the all questions</h2>\r\n                    {\r\n                        this.props.loading || !this.props.quiz ?\r\n                            <Loader/> :\r\n                            this.props.isFinished ?\r\n                                <FinishedQuiz\r\n                                    results={this.props.results}\r\n                                    quiz={this.props.quiz}\r\n                                    onRetry={this.props.retryQuiz}\r\n                                />\r\n                                :\r\n                                <ActiveQuiz answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                            question={this.props.quiz[this.props.activeQuestion].question}\r\n                                            onAnswerClicked={this.props.quizAnswerClick}\r\n                                            quizLength={this.props.quiz.length}\r\n                                            questionNumber={this.props.activeQuestion + 1}\r\n                                            state={this.props.answerState}\r\n                                />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchQuizById: (id) => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = (props) => {\r\n\r\n    const type = props.type || 'text';\r\n    const cls = ['Input'];\r\n    const htmlFor = `${type}--${Math.random()}`;\r\n\r\n    const errorMessage = isInvalid(props) ? <span>{props.errorMessage || 'You entered invalid data!'}</span> : null;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push('invalid');\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(\" \")}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                id={htmlFor}\r\n                type={type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Input;","import is from \"is_js\";\r\n\r\nexport function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: \"\"\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n        isValid = is.email(value);\r\n    }\r\n\r\n    if (validation.minLength) {\r\n        isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\n\r\nexport function authenticate(email, password, isLogin) {\r\n    return async (dispatch) => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true // for firebase\r\n        };\r\n\r\n        let url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAOLW6Oq5DyGRsn8EIKr6IpHlrgTwnNfRs\";\r\n\r\n        if (isLogin) {\r\n            url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAOLW6Oq5DyGRsn8EIKr6IpHlrgTwnNfRs\";\r\n        }\r\n\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n        localStorage.setItem(\"token\", data.idToken);\r\n        localStorage.setItem(\"userId\", data.localId);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n\r\n        dispatch(authSuccess(data.idToken));\r\n        dispatch(autoLogout(data.expiresIn));\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        payload: token\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"expirationDate\");\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return (dispatch) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token));\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport './Auth.css';\r\nimport Button from \"../../UI/button/Button\";\r\nimport Input from \"../../UI/input/Input\";\r\nimport {validate, validateForm} from \"../../form/form-framevork\";\r\nimport {connect} from \"react-redux\";\r\nimport {authenticate} from \"../../../store/actions/auth\";\r\n\r\nclass Auth extends React.Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: \"Email\",\r\n                errorMessage: \"You've entered an wrong email\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: \"Password\",\r\n                errorMessage: \"You've entered wrong password\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    loginHandler = () => {\r\n        this.props.authenticate(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        );\r\n    };\r\n\r\n    registerHandler = () => {\r\n        this.props.authenticate(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        );\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = validate(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            isFormValid: validateForm(formControls),\r\n            formControls\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='Auth'>\r\n                <div>\r\n                    <h1>Authorization</h1>\r\n\r\n                    <form className='AuthForm' onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n                        <Button\r\n                            type='correct'\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={(event) => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authenticate: (email, password, isLogin) => dispatch(authenticate(email, password, isLogin))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport \"./Select.css\";\r\n\r\nconst Select = (props) => {\r\n\r\n    const htmlFor = `${props.label}--${Math.random()}`;\r\n\r\n    return (\r\n        <div className='Select'>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {\r\n                    props.options.map((option, index) => {\r\n                        return (\r\n                            <option\r\n                                value={option.value}\r\n                                key={option.value + index}\r\n                            >\r\n                                {option.text}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Select;","import React from 'react';\r\nimport './QuizCreator.css';\r\nimport Button from \"../../UI/button/Button\";\r\nimport Input from \"../../UI/input/Input\";\r\nimport {createControl, validate, validateForm} from \"../../form/form-framevork\";\r\nimport Select from \"../../UI/select/Select\";\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../../store/actions/create\";\r\n\r\nfunction createControlOptions(number) {\r\n    return createControl({\r\n        label: `Enter answer № ${number}`,\r\n        errorMessage: \"Cannot be empty!\",\r\n        id: number\r\n    }, {required: true});\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: \"Enter question\",\r\n            errorMessage: \"Question cannot be empty!\"\r\n        }, {required: true}),\r\n        option1: createControlOptions(1),\r\n        option2: createControlOptions(2),\r\n        option3: createControlOptions(3),\r\n        option4: createControlOptions(4)\r\n    }\r\n}\r\n\r\nclass QuizCreator extends React.Component {\r\n\r\n    state = {\r\n        rightAnswerId: 1,\r\n        isFormValid: false,\r\n        formControls: createFormControls()\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        };\r\n\r\n        this.props.createQuizQuestion(questionItem);\r\n\r\n        this.setState({\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        })\r\n    };\r\n\r\n    createQuizHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            quiz: [],\r\n            rightAnswerId: 1,\r\n            isFormValid: false,\r\n            formControls: createFormControls()\r\n        });\r\n        this.props.finishCreateQuiz();\r\n    };\r\n\r\n    onChangeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    };\r\n\r\n    onSelectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    };\r\n\r\n    renderInputControls = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n\r\n            return (\r\n                <React.Fragment key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={(event) => this.onChangeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {index === 0 ? <hr/> : null}\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Choose correct answer\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.onSelectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />;\r\n        return (\r\n            <div className='QuizCreator'>\r\n                <div>\r\n                    <h1>Create Quiz</h1>\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n                        {this.renderInputControls()}\r\n                        {select}\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Add question\r\n                        </Button>\r\n                        <Button\r\n                            type=\"correct\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quiz: state.quizCreator.quiz\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createQuizQuestion: (item) => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        payLoad: item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().quizCreator.quiz);\r\n        dispatch(resetQuizCreation());\r\n    }\r\n}","import React from 'react';\r\nimport './QuizList.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../UI/loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../../store/actions/quiz\";\r\n\r\nclass QuizList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes();\r\n    }\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz) => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.loading && this.props.quizes.length !== 0 ? <Loader/> : this.renderQuizes();\r\n        return (\r\n            <div className='QuizList'>\r\n                <div>\r\n                    <h1>Quiz List</h1>\r\n                    <ul>\r\n                        {content}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n};\r\n\r\n const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Logout extends React.Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <Redirect to={'/'}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\nimport Layout from \"./hoc/layout/Layout\";\r\nimport Quiz from \"./containers/quiz/Quiz\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport Auth from \"./containers/auth/Auth\";\r\nimport QuizCreator from \"./containers/quiz-creator/QuizCreator\";\r\nimport QuizList from \"./containers/quiz-list/QuizList\";\r\nimport {connect} from \"react-redux\";\r\nimport Logout from \"./Logout/Logout\";\r\nimport {autoLogin} from \"../store/actions/auth\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.autoLogin();\r\n    }\r\n\r\n    render() {\r\n        let routes = (\r\n            <Switch>\r\n                <Route path='/auth' component={Auth}/>\r\n                <Route path='/quiz/:id' component={Quiz}/>\r\n                <Route path='/' component={QuizList}/>\r\n            </Switch>\r\n        );\r\n\r\n        if (this.props.isAuthenticated) {\r\n            routes = (\r\n                <Switch>\r\n                    <Route path='/quiz-creator' component={QuizCreator}/>\r\n                    <Route path='/quiz/:id' component={Quiz}/>\r\n                    <Route path='/logout' component={Logout}/>\r\n                    <Route path='/' component={QuizList}/>\r\n                </Switch>\r\n            )\r\n        }\r\n        return (\r\n            <Layout>\r\n                {routes}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        autoLogin: () => dispatch(autoLogin())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","import {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS, FINISH_QUIZ, MOVE_TO_NEXT_QUESTION, QUIZ_RETRY,\r\n    QUIZ_SET_STATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n};\r\n\r\nconst quizReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quizes: action.payLoad\r\n            };\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payLoad\r\n            };\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quiz: action.payLoad\r\n            };\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state,\r\n                answerState: action.payLoad.answerState,\r\n                results: action.payLoad.results\r\n            };\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            };\r\n        case MOVE_TO_NEXT_QUESTION:\r\n            return {\r\n                ...state,\r\n                answerState: null,\r\n                activeQuestion: action.payLoad\r\n            };\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default quizReducer;","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quiz: []\r\n};\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.payLoad]\r\n            };\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            };\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    quizCreator: createReducer,\r\n    auth: authReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport {compose, createStore, applyMiddleware} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}